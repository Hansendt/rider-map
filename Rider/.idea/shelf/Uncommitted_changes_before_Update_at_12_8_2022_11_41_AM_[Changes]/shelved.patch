Index: app/src/main/res/layout/activity_home.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/colorPrimary\"\r\n    tools:context=\".Home\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:orientation=\"vertical\">\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"61dp\"\r\n            android:layout_marginTop=\"80px\"\r\n            android:orientation=\"horizontal\">\r\n            <androidx.cardview.widget.CardView\r\n                android:layout_width=\"61dp\"\r\n                android:layout_height=\"61dp\"\r\n                android:layout_gravity=\"center\"\r\n                android:layout_margin=\"25dp\"\r\n                android:layout_centerVertical=\"true\"\r\n                app:cardCornerRadius=\"300dp\">\r\n                <ImageView\r\n                    android:id=\"@+id/profilePicture\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"200dp\"\r\n                    android:onClick=\"changeProfilePicture\"/>\r\n            </androidx.cardview.widget.CardView>\r\n<!--            <Button-->\r\n<!--                android:layout_width=\"wrap_content\"-->\r\n<!--                android:layout_height=\"wrap_content\"-->\r\n<!--                android:id=\"@+id/profile\">-->\r\n<!--            </Button>-->\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:orientation=\"vertical\">\r\n                <TextView\r\n                    android:id=\"@+id/userName\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"30.5dp\"\r\n                    android:text=\"Hello, ...\"\r\n                    android:textSize=\"20dp\"\r\n                    android:textStyle=\"bold\"\r\n                    android:textColor=\"@color/white\"/>\r\n                <TextView\r\n                    android:id=\"@+id/riderType\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"30.5dp\"\r\n                    android:text=\"Casual Rider\"\r\n                    android:textSize=\"16dp\"\r\n                    android:textColor=\"@color/white\"/>\r\n            </LinearLayout>\r\n        </LinearLayout>\r\n\r\n        <FrameLayout\r\n            android:id=\"@+id/frameLayout\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"200dp\"\r\n            />\r\n\r\n        <TextView\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"24dp\"\r\n            android:layout_marginLeft=\"25dp\"\r\n            android:text=\"Reminders\"\r\n            android:textColor=\"@color/white\"\r\n            android:textStyle=\"bold\"\r\n            android:textSize=\"20dp\"/>\r\n\r\n        <FrameLayout\r\n            android:id=\"@+id/frameLayout2\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"300dp\"/>\r\n\r\n\r\n    </LinearLayout>\r\n\r\n    <com.google.android.material.bottomnavigation.BottomNavigationView\r\n        android:id=\"@+id/bottom_navigation\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"60dp\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        app:itemBackground=\"@color/colorPrimaryDark\"\r\n        app:itemIconTint=\"@drawable/selector\"\r\n        app:itemTextColor=\"@drawable/selector\"\r\n        app:menu=\"@menu/menu_navigation\" />\r\n\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_home.xml b/app/src/main/res/layout/activity_home.xml
--- a/app/src/main/res/layout/activity_home.xml	(revision ff0439af0d4138e1b65aa9424a1fd90803ba9019)
+++ b/app/src/main/res/layout/activity_home.xml	(date 1670472612472)
@@ -25,6 +25,7 @@
                 app:cardCornerRadius="300dp">
                 <ImageView
                     android:id="@+id/profilePicture"
+                    android:scaleType="centerCrop"
                     android:layout_width="match_parent"
                     android:layout_height="200dp"
                     android:onClick="changeProfilePicture"/>
Index: app/src/main/java/id/ac/umn/rider/ReminderAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package id.ac.umn.rider;\r\n\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.media.Image;\r\nimport android.os.Build;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class ReminderAdapter extends RecyclerView.Adapter<ReminderAdapter.MyViewHolder>{\r\n\r\n    Context context;\r\n    ArrayList<Reminder> reminderList;\r\n\r\n    public ReminderAdapter(Context context, ArrayList<Reminder> reminderList) {\r\n        this.context = context;\r\n        this.reminderList = reminderList;\r\n    }\r\n\r\n\r\n    @NonNull\r\n    @Override\r\n    public MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        View v = LayoutInflater.from(context).inflate(R.layout.list_reminder, parent, false);\r\n        return new MyViewHolder((ViewGroup) v);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull ReminderAdapter.MyViewHolder holder, int position) {\r\n        Reminder reminder = reminderList.get(position);\r\n        holder.reminderPart.setText(reminder.getReminderPart());\r\n        holder.reminderDate.setText(reminder.getReminderDate());\r\n        holder.reminderOptimalDate.setText(reminder.getReminderOptimalDate());\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return reminderList.size();\r\n    }\r\n\r\n    public class MyViewHolder extends RecyclerView.ViewHolder {\r\n        ImageView reminderImage;\r\n        TextView reminderPart, reminderDate, reminderOptimalDate;\r\n        ImageView reminderDelete;\r\n\r\n        public MyViewHolder(@NonNull ViewGroup itemView) {\r\n            super(itemView);\r\n            reminderImage = itemView.findViewById(R.id.reminderImage);\r\n            reminderPart = itemView.findViewById(R.id.reminderPart);\r\n            reminderDate = itemView.findViewById(R.id.reminderDate);\r\n            reminderOptimalDate = itemView.findViewById(R.id.reminderOptimalDate);\r\n//            ImageView reminderDelete= (ImageView) findViewById(R.id.image);\r\n//            reminderDelete.setImageResource(R.drawable.my_image);\r\n\r\n\r\n            reminderDelete.setOnClickListener(new View.OnClickListener() {\r\n//                reminderDelete.setImageResource(R.drawable.ic_baseline_check_box_24);\r\n                @Override\r\n                public void onClick(View v) {\r\n                    AlertDialog.Builder alert;\r\n                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\r\n                        alert = new AlertDialog.Builder(itemView.getContext(), android.R.style.Theme_Material_Dialog_Alert);\r\n                    } else {\r\n                        alert = new AlertDialog.Builder(itemView.getContext());\r\n                    }\r\n                    alert.setTitle(\"Confirmation\")\r\n                            .setMessage(\"Have you really changed your part or paid the tax?\")\r\n                            .setPositiveButton(android.R.string.yes, new DialogInterface.OnClickListener() {\r\n                                public void onClick(DialogInterface dialog, int which) {\r\n                                    reminderList.remove(getAdapterPosition());\r\n                                    notifyItemRemoved(getAdapterPosition());\r\n                                }\r\n                            })\r\n                            .setNegativeButton(android.R.string.no, new DialogInterface.OnClickListener() {\r\n                                public void onClick(DialogInterface dialog, int which) {}\r\n                            })\r\n                            .show();\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/id/ac/umn/rider/ReminderAdapter.java b/app/src/main/java/id/ac/umn/rider/ReminderAdapter.java
--- a/app/src/main/java/id/ac/umn/rider/ReminderAdapter.java	(revision ff0439af0d4138e1b65aa9424a1fd90803ba9019)
+++ b/app/src/main/java/id/ac/umn/rider/ReminderAdapter.java	(date 1670474243323)
@@ -63,30 +63,30 @@
 //            reminderDelete.setImageResource(R.drawable.my_image);
 
 
-            reminderDelete.setOnClickListener(new View.OnClickListener() {
-//                reminderDelete.setImageResource(R.drawable.ic_baseline_check_box_24);
-                @Override
-                public void onClick(View v) {
-                    AlertDialog.Builder alert;
-                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
-                        alert = new AlertDialog.Builder(itemView.getContext(), android.R.style.Theme_Material_Dialog_Alert);
-                    } else {
-                        alert = new AlertDialog.Builder(itemView.getContext());
-                    }
-                    alert.setTitle("Confirmation")
-                            .setMessage("Have you really changed your part or paid the tax?")
-                            .setPositiveButton(android.R.string.yes, new DialogInterface.OnClickListener() {
-                                public void onClick(DialogInterface dialog, int which) {
-                                    reminderList.remove(getAdapterPosition());
-                                    notifyItemRemoved(getAdapterPosition());
-                                }
-                            })
-                            .setNegativeButton(android.R.string.no, new DialogInterface.OnClickListener() {
-                                public void onClick(DialogInterface dialog, int which) {}
-                            })
-                            .show();
-                }
-            });
+//            reminderDelete.setOnClickListener(new View.OnClickListener() {
+////                reminderDelete.setImageResource(R.drawable.ic_baseline_check_box_24);
+//                @Override
+//                public void onClick(View v) {
+//                    AlertDialog.Builder alert;
+//                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
+//                        alert = new AlertDialog.Builder(itemView.getContext(), android.R.style.Theme_Material_Dialog_Alert);
+//                    } else {
+//                        alert = new AlertDialog.Builder(itemView.getContext());
+//                    }
+//                    alert.setTitle("Confirmation")
+//                            .setMessage("Have you really changed your part or paid the tax?")
+//                            .setPositiveButton(android.R.string.yes, new DialogInterface.OnClickListener() {
+//                                public void onClick(DialogInterface dialog, int which) {
+//                                    reminderList.remove(getAdapterPosition());
+//                                    notifyItemRemoved(getAdapterPosition());
+//                                }
+//                            })
+//                            .setNegativeButton(android.R.string.no, new DialogInterface.OnClickListener() {
+//                                public void onClick(DialogInterface dialog, int which) {}
+//                            })
+//                            .show();
+//                }
+//            });
 
         }
 
Index: app/src/main/java/id/ac/umn/rider/Home.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package id.ac.umn.rider;\r\n\r\nimport androidx.activity.result.ActivityResultCallback;\r\nimport androidx.activity.result.ActivityResultLauncher;\r\nimport androidx.activity.result.contract.ActivityResultContracts;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentTransaction;\r\n\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\n//import com.google.android.gms.cast.framework.media.ImagePicker;\r\nimport com.google.android.gms.cast.framework.media.ImagePicker;\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport id.ac.umn.rider.databinding.ActivityMainBinding;\r\n\r\npublic class Home extends AppCompatActivity {\r\n\r\n\r\n    DatabaseReference databaseReference = FirebaseDatabase.getInstance().getReferenceFromUrl(\"https://rider-6018c-default-rtdb.firebaseio.com/\");\r\n    FirebaseStorage storage = FirebaseStorage.getInstance();\r\n    private FirebaseUser user;\r\n\r\n    TextView usernameTextView;\r\n    String userUID;\r\n    String vehicleNameString, vehicleBrandString, vehicleModelString, vehicleYearString, vehicleColorString, vehiclePlateString, cylinderCapacityString, vehicleFrameNumberString;\r\n    String isBikeCreated;\r\n    boolean isBikeCreatedBoolean;\r\n    ArrayList<Reminder> reminderList;\r\n    ImageView profilePicture;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        getSupportActionBar().hide();\r\n        setContentView(R.layout.activity_home);\r\n\r\n        user = FirebaseAuth.getInstance().getCurrentUser();\r\n        userUID = user.getUid();\r\n\r\n        usernameTextView = findViewById(R.id.userName);\r\n        if (user.getDisplayName() != null) {\r\n            usernameTextView.setText(\"Hello, \" + user.getDisplayName() + \"!\");\r\n        }\r\n\r\n        profilePicture = findViewById(R.id.profilePicture);\r\n\r\n\r\n        databaseReference.child(\"Users\").addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                isBikeCreated = snapshot.child(userUID).child(\"isBikeCreated\").getValue(String.class);\r\n                isBikeCreatedBoolean = Boolean.parseBoolean(isBikeCreated);\r\n                if (isBikeCreatedBoolean) {\r\n                    vehicleNameString = snapshot.child(userUID).child(\"Bike\").child(\"vehicleName\").getValue(String.class);\r\n                    vehicleBrandString = snapshot.child(userUID).child(\"Bike\").child(\"vehicleBrand\").getValue(String.class);\r\n                    vehicleModelString = snapshot.child(userUID).child(\"Bike\").child(\"vehicleModel\").getValue(String.class);\r\n                    vehicleYearString = snapshot.child(userUID).child(\"Bike\").child(\"vehicleYear\").getValue(String.class);\r\n                    vehicleColorString = snapshot.child(userUID).child(\"Bike\").child(\"vehicleColor\").getValue(String.class);\r\n                    vehiclePlateString = snapshot.child(userUID).child(\"Bike\").child(\"vehiclePlate\").getValue(String.class);\r\n                    cylinderCapacityString = snapshot.child(userUID).child(\"Bike\").child(\"cylinderCapacity\").getValue(String.class);\r\n                    vehicleFrameNumberString = snapshot.child(userUID).child(\"Bike\").child(\"vehicleFrameNumber\").getValue(String.class);\r\n\r\n\r\n                    if (snapshot.child(userUID).child(\"Reminder\").exists()) {\r\n                        replaceFragmentReminder(new ReminderFragment());\r\n                    } else{\r\n                        replaceFragmentReminder(new NoReminderFragment());\r\n                    }\r\n                    BikeCreatedFragment bikeCreatedFragment = new BikeCreatedFragment();\r\n                    FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();\r\n                    Bundle bundle = new Bundle();\r\n                    bundle.putString(\"vehicleName\", vehicleNameString);\r\n                    bundle.putString(\"vehicleBrand\", vehicleBrandString);\r\n                    bundle.putString(\"vehicleModel\", vehicleModelString);\r\n                    bundle.putString(\"vehicleColor\", vehicleColorString);\r\n                    bundle.putString(\"vehicleYear\", vehicleYearString);\r\n                    bundle.putString(\"vehiclePlate\", vehiclePlateString);\r\n                    bundle.putString(\"cylinderCapacity\", cylinderCapacityString);\r\n                    bundle.putString(\"vehicleFrameNumber\", vehicleFrameNumberString);\r\n                    bikeCreatedFragment.setArguments(bundle);\r\n                    transaction.replace(R.id.frameLayout, bikeCreatedFragment);\r\n                    transaction.commit();\r\n                }\r\n                else{\r\n                    replaceFragment(new NoBikeFragment());\r\n                    replaceFragmentReminder(new NoReminderFragment());\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n        BottomNavigationView bottomNavigationView=findViewById(R.id.bottom_navigation);\r\n        bottomNavigationView.setSelectedItemId(R.id.home);\r\n        bottomNavigationView.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener() {\r\n            @Override\r\n            public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n                switch(item.getItemId())\r\n                {\r\n                    case R.id.home:\r\n                        return true;\r\n                    case R.id.pom:\r\n                        startActivity(new Intent(getApplicationContext(),Spbu.class));\r\n                        overridePendingTransition(0,0);\r\n                        return true;\r\n                    case R.id.workshop:\r\n                        startActivity(new Intent(getApplicationContext(),Workshop.class));\r\n                        overridePendingTransition(0,0);\r\n                        return true;\r\n                    case R.id.about:\r\n                        startActivity(new Intent(getApplicationContext(),About.class));\r\n                        overridePendingTransition(0,0);\r\n                        return true;\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n//        if (reminder.size() == 0) {\r\n//            replaceFragmentReminder(new ReminderFragment());\r\n//        }\r\n\r\n    }\r\n\r\n    public void changeProfilePicture(View view) {\r\n        com.github.dhaval2404.imagepicker.ImagePicker.with(Home.this)\r\n                .crop()\t//User can only select image from Gallery\r\n                .start();\r\n    }\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        if (resultCode == RESULT_OK) {\r\n            Uri uri = data.getData();\r\n            profilePicture.setImageURI(uri);\r\n        } else if (resultCode == com.github.dhaval2404.imagepicker.ImagePicker.RESULT_ERROR) {\r\n            Toast.makeText(this, com.github.dhaval2404.imagepicker.ImagePicker.RESULT_ERROR, Toast.LENGTH_SHORT).show();\r\n        } else {\r\n            Toast.makeText(this, \"Task Cancelled\", Toast.LENGTH_SHORT).show();\r\n        }\r\n\r\n        if (requestCode == 1) {\r\n            if(resultCode == RESULT_OK) {\r\n                databaseReference.child(\"Users\").addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        if (snapshot.child(userUID).exists()) {\r\n                            vehicleNameString = snapshot.child(userUID).child(\"Bike\").child(\"vehicleName\").getValue().toString();\r\n                            vehicleBrandString = snapshot.child(userUID).child(\"Bike\").child(\"vehicleBrand\").getValue().toString();\r\n                            vehicleModelString = snapshot.child(userUID).child(\"Bike\").child(\"vehicleModel\").getValue().toString();\r\n                            vehicleYearString = snapshot.child(userUID).child(\"Bike\").child(\"vehicleYear\").getValue().toString();\r\n                            vehicleColorString = snapshot.child(userUID).child(\"Bike\").child(\"vehicleColor\").getValue().toString();\r\n                            vehiclePlateString = snapshot.child(userUID).child(\"Bike\").child(\"vehiclePlate\").getValue().toString();\r\n                            cylinderCapacityString = snapshot.child(userUID).child(\"Bike\").child(\"cylinderCapacity\").getValue().toString();\r\n                            vehicleFrameNumberString = snapshot.child(userUID).child(\"Bike\").child(\"vehicleFrameNumber\").getValue().toString();\r\n\r\n                            BikeCreatedFragment bikeCreatedFragment = new BikeCreatedFragment();\r\n                            FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();\r\n                            Bundle bundle = new Bundle();\r\n                            bundle.putString(\"vehicleName\", vehicleNameString);\r\n                            bundle.putString(\"vehicleBrand\", vehicleBrandString);\r\n                            bundle.putString(\"vehicleModel\", vehicleModelString);\r\n                            bundle.putString(\"vehicleColor\", vehicleColorString);\r\n                            bundle.putString(\"vehicleYear\", vehicleYearString);\r\n                            bundle.putString(\"vehiclePlate\", vehiclePlateString);\r\n                            bundle.putString(\"cylinderCapacity\", cylinderCapacityString);\r\n                            bundle.putString(\"vehicleFrameNumber\", vehicleFrameNumberString);\r\n                            bikeCreatedFragment.setArguments(bundle);\r\n                            transaction.replace(R.id.frameLayout, bikeCreatedFragment);\r\n                            transaction.commitAllowingStateLoss();\r\n                        }\r\n                    }\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n                        Toast.makeText(Home.this, \"Error\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onRestart() {\r\n        super.onRestart();\r\n        replaceFragmentReminder(new ReminderFragment());\r\n//        Intent intent = getIntent();\r\n//        Bundle args = intent.getBundleExtra(\"BUNDLE\");\r\n////        reminder = (ArrayList<Reminder>) args.getSerializable(\"ARRAYLIST\");\r\n//        if (reminder.size() > 0) {\r\n//            replaceFragmentReminder(new ReminderFragment());\r\n//        }\r\n    }\r\n\r\n//    @Override\r\n//    protected void onNewIntent(Intent intent) {\r\n//        super.onNewIntent(intent);\r\n//        if(intent.getStringExtra(\"methodName\").equals(\"addReminder\")){\r\n//            addReminder();\r\n//        }\r\n//    }\r\n\r\n//    public void addReminder(){\r\n//        reminderList.add(new Reminder(\"test\", \"test\", \"test\"));\r\n//        replaceFragmentReminder(new ReminderFragment());\r\n//    }\r\n\r\n    private void replaceFragment(Fragment fragment) {\r\n        FragmentManager fragmentManager = getSupportFragmentManager();\r\n        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();\r\n        fragmentTransaction.replace(R.id.frameLayout, fragment);\r\n        fragmentTransaction.commit();\r\n    }\r\n\r\n    private void replaceFragmentReminder(Fragment fragment) {\r\n        FragmentManager fragmentManager = getSupportFragmentManager();\r\n        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();\r\n        fragmentTransaction.replace(R.id.frameLayout2, fragment);\r\n        fragmentTransaction.commitAllowingStateLoss();\r\n    }\r\n\r\n    public void createBike(View view) {\r\n        Intent intent = new Intent(this, CreateBikeActivity.class);\r\n        startActivityForResult(intent, 1);\r\n    }\r\n\r\n\r\n    public void bikeInfo(View view) {\r\n        Intent intentBike = new Intent(this, BikeDetail.class);\r\n        startActivity(intentBike);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/id/ac/umn/rider/Home.java b/app/src/main/java/id/ac/umn/rider/Home.java
--- a/app/src/main/java/id/ac/umn/rider/Home.java	(revision ff0439af0d4138e1b65aa9424a1fd90803ba9019)
+++ b/app/src/main/java/id/ac/umn/rider/Home.java	(date 1670474356924)
@@ -22,15 +22,21 @@
 
 //import com.google.android.gms.cast.framework.media.ImagePicker;
 import com.google.android.gms.cast.framework.media.ImagePicker;
+import com.google.android.gms.tasks.OnFailureListener;
+import com.google.android.gms.tasks.OnSuccessListener;
 import com.google.android.material.bottomnavigation.BottomNavigationView;
 import com.google.firebase.auth.FirebaseAuth;
 import com.google.firebase.auth.FirebaseUser;
+import com.google.firebase.auth.UserProfileChangeRequest;
 import com.google.firebase.database.DataSnapshot;
 import com.google.firebase.database.DatabaseError;
 import com.google.firebase.database.DatabaseReference;
 import com.google.firebase.database.FirebaseDatabase;
 import com.google.firebase.database.ValueEventListener;
 import com.google.firebase.storage.FirebaseStorage;
+import com.google.firebase.storage.StorageReference;
+import com.google.firebase.storage.UploadTask;
+import com.squareup.picasso.Picasso;
 
 import java.util.ArrayList;
 
@@ -40,7 +46,7 @@
 
 
     DatabaseReference databaseReference = FirebaseDatabase.getInstance().getReferenceFromUrl("https://rider-6018c-default-rtdb.firebaseio.com/");
-    FirebaseStorage storage = FirebaseStorage.getInstance();
+    StorageReference storage = FirebaseStorage.getInstance().getReference();
     private FirebaseUser user;
 
     TextView usernameTextView;
@@ -61,12 +67,18 @@
         user = FirebaseAuth.getInstance().getCurrentUser();
         userUID = user.getUid();
 
+
+
         usernameTextView = findViewById(R.id.userName);
         if (user.getDisplayName() != null) {
             usernameTextView.setText("Hello, " + user.getDisplayName() + "!");
         }
 
         profilePicture = findViewById(R.id.profilePicture);
+        Uri uri = user.getPhotoUrl();
+        if (uri != null) {
+            Picasso.get().load(uri).into(profilePicture);
+        }
 
 
         databaseReference.child("Users").addListenerForSingleValueEvent(new ValueEventListener() {
@@ -163,6 +175,8 @@
         if (resultCode == RESULT_OK) {
             Uri uri = data.getData();
             profilePicture.setImageURI(uri);
+            user.updateProfile(new UserProfileChangeRequest.Builder().setPhotoUri(uri).build());
+            uploadImageToFirebase(uri);
         } else if (resultCode == com.github.dhaval2404.imagepicker.ImagePicker.RESULT_ERROR) {
             Toast.makeText(this, com.github.dhaval2404.imagepicker.ImagePicker.RESULT_ERROR, Toast.LENGTH_SHORT).show();
         } else {
@@ -209,17 +223,26 @@
         }
     }
 
-
-    @Override
-    protected void onRestart() {
-        super.onRestart();
-        replaceFragmentReminder(new ReminderFragment());
-//        Intent intent = getIntent();
-//        Bundle args = intent.getBundleExtra("BUNDLE");
-////        reminder = (ArrayList<Reminder>) args.getSerializable("ARRAYLIST");
-//        if (reminder.size() > 0) {
-//            replaceFragmentReminder(new ReminderFragment());
-//        }
+        private void uploadImageToFirebase(Uri uri) {
+        StorageReference fileRef = storage.child("users/" + userUID + "/profile.jpg");
+        fileRef.putFile(uri)
+                .addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {
+                    @Override
+                    public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {
+                        fileRef.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {
+                            @Override
+                            public void onSuccess(Uri uri) {
+                                databaseReference.child("Users").child(userUID).child("profilePicture").setValue(uri.toString());
+                            }
+                        });
+                    }
+                })
+                .addOnFailureListener(new OnFailureListener() {
+                    @Override
+                    public void onFailure(@NonNull Exception e) {
+                        Toast.makeText(Home.this, "Failed", Toast.LENGTH_SHORT).show();
+                    }
+                });
     }
 
 //    @Override
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\n\r\nandroid {\r\n    compileSdk 32\r\n\r\n    defaultConfig {\r\n        applicationId \"id.ac.umn.rider\"\r\n        minSdk 25\r\n        targetSdk 32\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    buildFeatures {\r\n        viewBinding true\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation 'com.github.dhaval2404:imagepicker:2.1'\r\n\r\n    implementation 'androidx.appcompat:appcompat:1.5.1'\r\n    implementation 'com.google.android.material:material:1.7.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'\r\n    implementation 'androidx.navigation:navigation-fragment:2.5.3'\r\n    implementation 'androidx.navigation:navigation-ui:2.5.3'\r\n    implementation 'com.google.android.gms:play-services-cast-framework:21.1.0'\r\n    testImplementation 'junit:junit:4.13.2'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.4'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'\r\n    //noinspection GradleCompatible\r\n    implementation 'com.android.support:cardview-v7:27.1.1'\r\n    implementation 'com.google.android.material:material:1.1.0-alpha10'\r\n    implementation platform('com.google.firebase:firebase-bom:31.1.0')\r\n    implementation 'com.google.firebase:firebase-dynamic-links'\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n    implementation 'com.google.firebase:firebase-database'\r\n    implementation 'com.google.firebase:firebase-storage'\r\n    implementation 'com.google.firebase:firebase-auth'\r\n\r\n\r\n//    implementation 'com.github.dhaval2404:imagepicker-support:1.7.1'\r\n//\r\n//    implementation \"androidx.activity:activity-ktx:1.2.3\"\r\n//    implementation \"androidx.fragment:fragment-ktx:1.3.3\"\\\r\n//    implementation 'com.github.Drjacky:ImagePicker:2.3.20'\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision ff0439af0d4138e1b65aa9424a1fd90803ba9019)
+++ b/app/build.gradle	(date 1670473740123)
@@ -53,6 +53,7 @@
     implementation 'com.google.firebase:firebase-database'
     implementation 'com.google.firebase:firebase-storage'
     implementation 'com.google.firebase:firebase-auth'
+    implementation 'com.squareup.picasso:picasso:2.8'
 
 
 //    implementation 'com.github.dhaval2404:imagepicker-support:1.7.1'
